<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Tech - Category - Joohwan's blog</title><link>http://jwanp.github.io/categories/tech/</link><description>Tech - Category - Joohwan's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Mar 2025 14:01:03 +0900</lastBuildDate><atom:link href="http://jwanp.github.io/categories/tech/" rel="self" type="application/rss+xml"/><item><title>[Javascript] 커스텀 함수로 배열 정렬하기</title><link>http://jwanp.github.io/posts/%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/</link><pubDate>Mon, 03 Mar 2025 14:01:03 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%A8%EC%88%98%EB%A1%9C-%EB%B0%B0%EC%97%B4-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/tech/javascript-coding-test/sorting.jpg" referrerpolicy="no-referrer">
&lt;/div>사진: Unsplash의 Julia Taubitz
함수 및 개념 정리 arr.indexOf(searchElement, fromIndex) arr 배열에서 첫번째로 등장한 searchElement의 index를 반환한다. searchElement를 찾을 수 없다면 -1 을 반환한다. fromIndex부터 찾는다. 출처 : Array.prototype.indexOf() const array = [2, 9, 9]; array.indexOf(2); // 0 array.indexOf(7); // -1 array.indexOf(9, 2); // 2 array.indexOf(2, -1); // -1 array.indexOf(2, -3); // 0 const array = [NaN]; // NaN은 검색할 수 없다. array.indexOf(NaN); // -1 arr.includes(searchElement, fromIndex) arr 배열에서 searchElement가 포함되어 있는지를 반환한다.</description></item><item><title>[Javascript] Capturing Rainwater</title><link>http://jwanp.github.io/posts/capturing-rainwater/</link><pubDate>Thu, 16 Jan 2025 00:16:43 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/capturing-rainwater/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/tech/javascript-coding-test/capturing-rainwater.png" referrerpolicy="no-referrer">
            </div>Made by 박주환
함수 및 개념 정리 two pointer two pointer란 배열에서 양쪽의 두개의 포인터가 서로를 향해 이동하면서 문제를 푸는 방법입니다.
 배열 문제에서 주로 쓰입니다. 배열의 복사본이 필요하지 않고 한번의 loop(배열의 길이 만큼 == O(n))으로 문제를 풀 수 있습니다.  Math.max(요소1, 요소2, &hellip;): 가장 큰것을 반환합니다. console.log(Math.max(1, 3, 2)); // Expected output: 3  console.log(Math.max(-1, -3, -2)); // Expected output: -1  const array1 = [1, 3, 2]; console.log(Math.max(...array1)); // Expected output: 3  출처  while(조건){ 실행문 } : 문장안을 실행하기 전에 조건문을 확인합니다.]]></description></item><item><title>[Javascript] Sieve of Eratosthenes</title><link>http://jwanp.github.io/posts/sieve-of-eratosthenes/</link><pubDate>Sat, 21 Dec 2024 17:06:52 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/sieve-of-eratosthenes/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/tech/javascript-coding-test/%ec%86%8c%ec%88%98%ed%85%8c%ec%9d%b4%eb%b8%94.png" referrerpolicy="no-referrer">
            </div>Made by 박주환
함수 및 개념 정리 문제를 보기전에 필요한 함수들을 살펴 보겠습니다. 기초적인 내용도 포함되어 있지만 다시한번 개념을 명확하게 하고 모르던 함수가 있다면 참고 하시면 좋습니다.
지금 당장 눈에 들어오지 않는다면 문제를보다가 궁금하면 다시 위로 올라와서 공부하는 것이 더 도움이 될 수도 있습니다.
for loop 진행 순서: 항상 조건문을 들렸다가 실행문을 실행합니다. for(1.초기화; 2.조건문; 4.증감식){ 3.실행문 }  초기화 조건문: true 실행문 증감식 조건문: true 실행문 증감식 조건문: false -&gt; break  // 예시 for (let i = 2; i &lt;= limit; i++) { 실행문; }]]></description></item><item><title>읽기만 해도 도움 되는 Javascript 코딩테스트</title><link>http://jwanp.github.io/posts/%EC%9D%BD%EA%B8%B0%EB%A7%8C-%ED%95%B4%EB%8F%84-%EB%8F%84%EC%9B%80-%EB%90%98%EB%8A%94-javascript-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/</link><pubDate>Sat, 21 Dec 2024 15:37:04 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/%EC%9D%BD%EA%B8%B0%EB%A7%8C-%ED%95%B4%EB%8F%84-%EB%8F%84%EC%9B%80-%EB%90%98%EB%8A%94-javascript-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/tech/javascript-coding-test/snow-and-tree.png" referrerpolicy="no-referrer">
&lt;/div>pictured by 박주환 아름다운 눈을 보며 힐링하기 좋은 날씨입니다. 오랜만에 본가에 온 김에, 눈으로 뒤덮인 자연이 아름다워 사진을 찍어봤습니다. 여러분도 가끔 자연을 바라보며 마음의 여유를 가져보세요. 기업들의 코딩테스트 추세 저는 주로 효율이 좋은 Python으로 코딩 테스트를 준비해 왔습니다. 하지만 취업 준비를 하면서 생각보다 많은 회사가 프론트엔드 직무로 지원하면 언어를 Javascript 혹은 Java로 제한하는 경우가 많았습니다. 저의 경우에는 작년에 지원했던 여기어때, 현대 오토에버, 소프티어 부트캠프 등이 있습니다. 그래도 대부분의 회사가 여러 언어를 지원하지만 더 많은 선택지를 가지려면 프론트나 Node개발자 분들은 Javascript으로 준비하는게 더 좋지 않을까 생각합니다.</description></item><item><title>Visual Studio Code --file-write: EPERM 해결</title><link>http://jwanp.github.io/posts/vsc-file-write-error/</link><pubDate>Mon, 22 Jan 2024 10:15:17 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/vsc-file-write-error/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/featuredImage/VSC--file-write-Error.png" referrerpolicy="no-referrer">
            </div>잘 작업해 오던 작업 폴더에서 저장이 안된다. 마지막에 branch merge 하고 작업 branch 삭제후 다시 분기했었다. 그 후부터 익숙하지만 좀 더 까다로운 에러가 뜬다.
비번을 입력해도 왜 계속 에러가 뜨지 먼저 저장을 하면 비번을 입력하라고 나온다. 여기까지는 익숙하다. 그리고 비번을 치면 저장이 되어야 하는데&hellip; 또 다시 에러가 뜬다.
이런적은 처음이어서 굉장히 당황스러웠다.
왜 이럴까? 일단 EPERM을 보니 권한 문제인 것 같다. 따라서 폴더의 권한을 나로 바꿔야 하고 구글링을 해서 해결하였다.]]></description></item><item><title>React로 빌드하고 github pages 로 호스팅 해보았다. (feat. 404에러)</title><link>http://jwanp.github.io/posts/react%EB%A1%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B3%A0-github-pages%EB%A1%9C-%ED%98%B8%EC%8A%A4%ED%8C%85/</link><pubDate>Sat, 20 Jan 2024 14:07:47 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/react%EB%A1%9C-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B3%A0-github-pages%EB%A1%9C-%ED%98%B8%EC%8A%A4%ED%8C%85/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/featuredImage/React%eb%a1%9c-%eb%b9%8c%eb%93%9c%ed%95%98%ea%b3%a0-github-pages%eb%a1%9c-%ed%98%b8%ec%8a%a4%ed%8c%85.jpg" referrerpolicy="no-referrer">
            </div>사진: Unsplash의 Roman Synkevych
Github Pages  Github Pages는 static site hosting 서비스로 레파지토리에 HTML, CSS, Javascript 파일을 올리면 웹사이트를 배포해 주는 기능이다.
 보통은 개인 블로그를 github.io 도메인을 사용하여 배포한다. 내 블로그도 HUGO 라는 Static Site Genegrator 와 Github Pages 를 이용하여 배포하였다. Github Pages를 이용하려면 github.io 도메인을 이용하기 때문에 &lt;username&gt;.github.io 레파지토리는 무조건 있어야 한다. 만드는 법은 여기 참고.
Github Pages가 좋은점은 모든 public 레파지토리를 이 도메인을 사용하여 배포할 수 있다는 점이다.]]></description></item><item><title>[ESLint, React] 모든 Import 에 Casing 오류가 뜬다</title><link>http://jwanp.github.io/posts/%EB%AA%A8%EB%93%A0-import-%EC%97%90-casing-%EC%98%A4%EB%A5%98%EA%B0%80-%EB%9C%AC%EB%8B%A4/</link><pubDate>Sat, 13 Jan 2024 14:03:59 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/%EB%AA%A8%EB%93%A0-import-%EC%97%90-casing-%EC%98%A4%EB%A5%98%EA%B0%80-%EB%9C%AC%EB%8B%A4/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/Tech/202040113-ESLint.webp" referrerpolicy="no-referrer">
&lt;/div>ESLint 에서 모든 import 에 대해서 Casing 오류가 떴다.
Casing of {file name} does not match the underlying filesystem.
stackOverflow 도 보고 ESLint issues 도 봤지만 힌트를 찾지 못했다.
그래서 Chat GPT 에 물어봤다. 답은 다음과 같이 왔다.
Case Sensitivity Check the File System File Extension IDE/File Explorer Case Sensitivity 먼저 Case Sensitivity 는 대소문자 오류이다. ESLint 는 대소문자 구분에 엄격하지만 윈도우 나 WSL 을 사용하면 이것이 구분이 안되는 경우도 있다고 한다.</description></item><item><title>자동 팀 배정 프로그램을 만들어 보았다</title><link>http://jwanp.github.io/posts/%EC%9E%90%EB%8F%99-%ED%8C%80-%EB%B0%B0%EC%A0%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%95%98%EB%8B%A4/</link><pubDate>Fri, 12 Jan 2024 22:00:03 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/%EC%9E%90%EB%8F%99-%ED%8C%80-%EB%B0%B0%EC%A0%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%84-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%95%98%EB%8B%A4/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/featuredImage/20240112.jpg" referrerpolicy="no-referrer">
&lt;/div>Pixabay로부터 입수된 Maike und Björn Bröskamp님의 이미지 입니다.
실생활에서 마주하는 문제를 코딩을 이용하면 꽤 효율적으로 해결할 수 있다. 특히 문서작업에서 자동화를 한다면 훨씬 효율적으로 일할 수 있다.
최근에 동아리의 팀 자동 배정 프로그램을 만들어 보았다. 만약 이 프로그램이 없다면 매우 힘들었을 것이다. 왜냐하면 많은수의 해당하는 사람들의 시간들을 직접 확인하면서 팀을 짜야하기 때문이다.
이는 많은 시행착오가 필요하지만 코드는 돌리기만 하면 자동으로 배정된다.
목적 코드의 목적은 많은수의 사람들의 팀을 자동 배정하는 것이다.</description></item><item><title>[Java] HashMap Class</title><link>http://jwanp.github.io/posts/hashmap-class/</link><pubDate>Sun, 19 Nov 2023 02:57:06 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/hashmap-class/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/Java/Java.png" referrerpolicy="no-referrer">
            </div>Java HashMap Class 를 알아보자.
먼저 HashMap 은 탐색에 매우 효율적이다.
 Key-value pair 로서 값을 저장한다. key 값과 value 값을 hashfunction 을 이용해 매우 빠르게 찾는다. 탐색시 O(1) 의 성능을 보인다.  해당 사이트들을 참고하여 작성하였다.
https://docs.oracle.com/javase/8/docs/api/java/util/HashMap.html
https://coding-factory.tistory.com/556
  import HashMap&lt;K,V&gt;
 K - key 값의 type V - value 값의 type  import java.util.HashMap;   Constructors default load factor - 0.75
HashMap() HashMap&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;(); HashMap(int initialCapacity) 선언시에 미리 사이즈를 정해두면 메모리 공간에 상당히 도움된다.]]></description></item><item><title>Web3.js</title><link>http://jwanp.github.io/posts/web3.js/</link><pubDate>Sun, 06 Aug 2023 22:33:26 +0900</pubDate><author>박주환</author><guid>http://jwanp.github.io/posts/web3.js/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/web3.js/web3_js.png" referrerpolicy="no-referrer">
&lt;/div>지금까지는 스마트 컨트렉트를 개발하는 것에 초점이 맞춰져 있었다. 그렇다면 frontend 랑 스마트 컨트렉트와 연결은 어떻게 할까?
web 개발은 크게 front-end 와 back-end 로 나누어서 볼 수 있다. API 서버를 만들어서 필요한 정보들을 HTTP 프로토콜로 가져오든지 해서 보기 좋게 front-end 에서 뿌려준다.
Web2 과 유사하게 back-end 는 smart-contract 로 보고 front-end 는 동일하다. 그렇다면 소통 방식도 같을까? 그렇지 않다. Blockchain node 의 provider 는 JSON-RPC 라는 통신 규약을 사용하고 우리는 smart-contract 에서 정보들을 가져올때 이러한 규약들을 이용해서 소통해야한다.</description></item></channel></rss>